2024.11.11 

SISRS input (Raw Reads):
/data/schwartzlab/Biancani/data/mammals

SISRS scripts:
/data/schwartzlab/Biancani/PLACENTAL/SISRS

SISRS Output Directory:
/data/schwartzlab/Biancani/PLACENTAL/SISRS_out

SISRS loci (aligned contigs) folder:
LOCI=/data/schwartzlab/Biancani/PLACENTAL/SISRS_out/SISRS_Run/aligned_contigs
_______________________________

Restarting post-SISRS analysis:
Github: https://github.com/LMBiancani/PlacentalPolytomy.git

cd /data/schwartzlab/Biancani/
git clone https://github.com/LMBiancani/PlacentalPolytomy.git

cd /data/schwartzlab/Biancani/PlacentalPolytomy/01_FilterByTaxa/
nano 01.00_FilterByTaxa.sh
_______________________________
#!/bin/sh
#SBATCH --job-name="filter"
#SBATCH --time=30:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node - just use 1 
#SBATCH --mail-user="biancani@uri.edu" #CHANGE to your email
#SBATCH --mail-type=ALL

## UPDATE PATHS:
# path to SISRS loci (aligned contigs) folder:
LOCI=/data/schwartzlab/Biancani/PLACENTAL/SISRS_out/SISRS_Run/aligned_contigs
# path to folder containing filterByTaxa scripts:
SCRIPTS=/data/schwartzlab/Biancani/PlacentalPolytomy/01_FilterByTaxa
# path to taxon group table (csv):
TXNGROUPS=/data/schwartzlab/Biancani/PlacentalPolytomy/01_FilterByTaxa/groups.csv
# path to output folder for filtered loci (will be created by script if necessary):
OUTPUT=/data/schwartzlab/Biancani/PlacentalPolytomy/output/01_SISRS_loci_filtered

## UPDATE parameters:
SEQCOMPLETE=0.33 # taxon sequence completeness, (e.g. 0.33 is 33% non N)
MINTAXA=18 # minimum number taxa to be present, e.g. 18
MINGROUPS=4 # minimum number of taxon groups to be present, e.g. 4

echo "Total number of unfiltered SISRS loci:"
ls -1U $LOCI | wc -l

cd $SLURM_SUBMIT_DIR

module purge
#for URI's Andromeda cluster
module load Biopython/1.78-foss-2020b 

mkdir -p $OUTPUT
python $SCRIPTS/filter_SISRS_output.py $TXNGROUPS $LOCI $OUTPUT $SEQCOMPLETE $MINTAXA $MINGROUPS

echo "Number of filtered SISRS loci:"
ls -1U $OUTPUT | wc -l
_______________________________
sbatch -q schwartzlab 01.00_FilterByTaxa.sh
Submitted batch job 348540
Job ID: 348540
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 00:14:45
CPU Efficiency: 3.86% of 06:21:38 core-walltime
Job Wall-clock time: 06:21:38
Memory Utilized: 610.78 MB
Memory Efficiency: 29.82% of 2.00 GB

2024.11.12

Run job with just count loci lines:
###
echo "Total number of unfiltered SISRS loci:"
ls -1U $LOCI | wc -l
echo "Number of filtered SISRS loci:"
ls -1U $OUTPUT | wc -l
###
Submitted batch job 348557
Job ID: 348557
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 00:00:14
CPU Efficiency: 1.38% of 00:16:53 core-walltime
Job Wall-clock time: 00:16:53
Memory Utilized: 524.00 KB
Memory Efficiency: 0.02% of 2.00 GB

Total number of unfiltered SISRS loci:
3,510,445
Number of filtered SISRS loci:
109,799

2025.03.24 - rerunning prior analysis steps

cd /data/schwartzlab/Biancani/PlacentalPolytomy/02_IQtree

02.00_iqtree_prep.sh
_______________________________
#!/bin/bash
#SBATCH --job-name="IQprep"
#SBATCH --time=1:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node
#SBATCH -c 1
#SBATCH --mem-per-cpu=6G
#SBATCH --mail-user="biancani@uri.edu"
#SBATCH --mail-type=ALL

## UPDATE PATHS:
# path to project directory:
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# path to FILTERED SISRS loci (aligned contigs):
INPUT=$PROJECT/output/01_SISRS_loci_filtered
# path to output folder for IQ-TREE (will be created by script if necessary):
OUTPUT=$PROJECT/output/02_iqtree_assessment

## UPDATE PARAMETERS:
# number of simultaneous tasks for subsequent array jobs:
TASKS=40

mkdir -p ${OUTPUT}
cd ${OUTPUT}

# create output directories for array jobs:
mkdir -p 02.00_array_prep_files
mkdir -p 02.01_compare_hypotheses/scf
mkdir -p 02.01_compare_hypotheses/likelihood
mkdir -p 02.02_concat_trees
mkdir -p 02.03_gene_trees/individual_gtrees

cd 02.00_array_prep_files
# extract filenames from INPUT and split into bins of 4000 loci
ls ${INPUT} | rev | cut -f1 -d/ | rev | split -l 4000 - aligned_loci_list_
arrayN=$(ls aligned_loci_list_* | wc -l)
ls aligned_loci_list_* > array_list.txt
if [ $arrayN -lt $TASKS ]
    then
      TASKS=$arrayN
fi

echo "#SBATCH --array=[1-${arrayN}]%${TASKS}" | tee array_details_slurm.txt
_______________________________
sbatch -q schwartzlab 02.00_iqtree_prep.sh
Submitted batch job 363523
Job ID: 363523
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 00:00:01
CPU Efficiency: 6.67% of 00:00:15 core-walltime
Job Wall-clock time: 00:00:15
Memory Utilized: 0.00 MB (estimated maximum)
Memory Efficiency: 0.00% of 6.00 GB (6.00 GB/core)

output:
#SBATCH --array=[1-28]%28

cd /data/schwartzlab/Biancani/PlacentalPolytomy/02_IQtree

02.01_iqtree_array.sh
_______________________________
#!/bin/bash
#SBATCH --job-name="IQarr"
#SBATCH --time=48:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node
#SBATCH -c 1
#SBATCH --mem-per-cpu=6G
#SBATCH --array=[1-28]%28 ## UPDATE based on output from 02.00_iqtree_prep.sh
#SBATCH --mail-user="biancani@uri.edu" ## UPDATE
#SBATCH --mail-type=ALL

## UPDATE PATHS as necessary:

# path to project directory:
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# location of iqtree scripts:
scripts_dir=$PROJECT/02_IQtree
# path to FILTERED SISRS loci (aligned contigs):
INPUT=$PROJECT/output/01_SISRS_loci_filtered
# path to file containing alternative hypotheses trees:
trees_to_eval=$scripts_dir/hypothesis_trees/Polytomy_Placental_Hypotheses.tree
# path to IQ-TREE executale:
IQTREE="/data/schwartzlab/Biancani/Software/iqtree-2.1.2-Linux/bin/iqtree2"
# path to output folder for IQ-TREE
OUTPUT=$PROJECT/output/02_iqtree_assessment
# (must be location of array_list.txt and aligned_loci_list_* created by iqtree prep script)
ARRAY=$OUTPUT/02.00_array_prep_files
# paths to hypotheses output directory (created by 02.00_iqtree_prep.sh):
hypotheses=$OUTPUT/02.01_compare_hypotheses
scf=${hypotheses}/scf
likelihood=${hypotheses}/likelihood

## Specify taxon list for each hypothesis tree:
# For Placental root question: Determine which 2 out of 3 groups are sisters for each hypothesis and select one of the sisters.
# List 1 (Afrotheria Out) = Xenarthra
focal_tips1=$scripts_dir/hypothesis_trees/tips_Xenarthra.txt
# List 2 (Boreoeutheria Out) = Afrotheria
focal_tips2=$scripts_dir/hypothesis_trees/tips_Afrotheria.txt
# List 3 (Xenarthra Out) = Boreoeutheria
focal_tips3=$scripts_dir/hypothesis_trees/tips_Boreoeutheria.txt
# Outgroup taxa list:
outgroup_tips=$scripts_dir/hypothesis_trees/tips_Outgroup.txt

module load R/4.0.3-foss-2020b

cd ${hypotheses}
date

#generate list of filenames for aligned loci:
fileline=$(sed -n ${SLURM_ARRAY_TASK_ID}p ${ARRAY}/array_list.txt)

#create output csv file for each batch fasta file created by prep script (aka each slurm task):
> $likelihood/LnLs_${SLURM_ARRAY_TASK_ID}.csv

cat $ARRAY/${fileline} | while read line
do
	echo $line
	Rscript ${scripts_dir}/trimTrees.R ${INPUT}/${line} ${trees_to_eval} ./trees_${line}.tre
	
	# iterate through 3 constraint trees:
	for t in 1 2 3; do
	  sed -n ${t}p ./trees_${line}.tre > ./tree${t}_${line}.tre # select constraint tree from tree file
	  ${IQTREE} -nt 1 -t ./tree${t}_${line}.tre -s ${INPUT}/${line} --scf 500 --prefix concord${t}_${line}
	  if [ "$t" -eq 1 ]; then
	    echo "ID,sCF,sCF_N,sDF1,sDF1_N,sDF2,sDF2_N,sN,debug" > ${scf}/scf_${line} # add header to scf output file
	  fi
	  focal_tips_var="focal_tips${t}"
	  Rscript ${scripts_dir}/getSCF.R concord${t}_${line}.cf.branch concord${t}_${line}.cf.stat ${!focal_tips_var} ${outgroup_tips} >> ${scf}/scf_${line}
	  ${IQTREE} -nt 1 -s ${INPUT}/${line} -pre calcLnL_${line} -g ./tree${t}_${line}.tre -m GTR+G -redo #calculate likelihoods
	  echo $line","$(grep "BEST SCORE FOUND" calcLnL_${line}.log | cut -f2 -d: ) >> ${likelihood}/LnLs_${SLURM_ARRAY_TASK_ID}.csv # pulls likelihood from file
	  rm concord${t}_${line}.log concord${t}_${line}.cf.branch concord${t}_${line}.cf.stat concord${t}_${line}.cf.tree concord${t}_${line}.cf.tree.nex
	  rm ./tree${t}_${line}.tre
  done
	
	# rm other potential output files
	# (while preventing the return of an error exit status if file does not exist)
	for file in trees_${line}.tre calcLnL_${line}.ckp.gz calcLnL_${line}.iqtree calcLnL_${line}.log calcLnL_${line}.treefile calcLnL_${line}.trees calcLnL_${line}.uniqueseq.phy calcLnL_${line}.parstree
	do
	  if [ -f $file ]; then # test to see if file exists
	    rm $file
	  else
	    echo "rm: cannot remove $file: No such file or directory"
	  fi
	done
done
_______________________________
sbatch -q schwartzlab 02.01_iqtree_array.sh
Submitted batch job 363524
Job ID: 363524
Array Job ID: 363524_28
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 06:02:41
CPU Efficiency: 70.58% of 08:33:50 core-walltime
Job Wall-clock time: 08:33:50
Memory Utilized: 63.14 MB
Memory Efficiency: 1.03% of 6.00 GB


2025.03.25

cd /data/schwartzlab/Biancani/PlacentalPolytomy/03_Annotation

03.00_DownloadReference.sh
_______________________________
#!/bin/sh
#SBATCH --job-name="download_reference"
#SBATCH --time=10:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node
#SBATCH --mail-user="biancani@uri.edu" #CHANGE to your email
#SBATCH --mail-type=ALL

## UPDATE PATHS:
# path to project directory:
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# path to output folder for annotation (will be created by script if necessary):
OUTPUT=$PROJECT/output/03_Annotation
# path to folder for reference genome (will be created by script if necessary):
RefDir=$OUTPUT/ReferenceGenome

## UPDATE URLs:
#URL for GFF format reference annotation file: 
ANNOTATION="https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/002/880/755/GCF_002880755.1_Clint_PTRv2/GCF_002880755.1_Clint_PTRv2_genomic.gff.gz"
#URL for fasta format reference genome:
GENOME="https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/002/880/755/GCF_002880755.1_Clint_PTRv2/GCF_002880755.1_Clint_PTRv2_genomic.fna.gz"

mkdir -p $RefDir
cd $RefDir

for i in $ANNOTATION $GENOME
do
  #download file:
  wget --tries=0 --retry-connrefused --continue --timeout=30 --progress=dot:giga $i
  #extract filename from URL:
  name=$(echo $i | rev | cut -d '/' -f 1 | rev)
  #decompress file:
  gunzip $name
done
_______________________________
sbatch -q schwartzlab 03.00_DownloadReference.sh
Submitted batch job 363295
Job ID: 363295
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 00:00:41
CPU Efficiency: 13.95% of 00:04:54 core-walltime
Job Wall-clock time: 00:04:54
Memory Utilized: 1.86 MB
Memory Efficiency: 0.09% of 2.00 GB

cd /data/schwartzlab/Biancani/PlacentalPolytomy/03_Annotation

03.01_Annotation.sh
_______________________________
#!/bin/bash
#SBATCH --job-name="annotate"
#SBATCH --time=100:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=36   # processor core(s) per node
#SBATCH --mail-user="biancani@uri.edu" # CHANGE THIS to your user email address
#SBATCH --mail-type=ALL

## UPDATE:
# number of tasks/processor cores per node:
TASKS=36
# path to project directory:
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# location of annotation scripts:
SCRIPTS=$PROJECT/03_Annotation
# path to FILTERED SISRS loci (aligned contigs) folder:
# path to FILTERED SISRS loci (aligned contigs):
LOCI=$PROJECT/output/01_SISRS_loci_filtered
# path to output folder for annotation (will be created by script if necessary):
OUTPUT=$PROJECT/output/03_Annotation

# name of study taxon closest to reference:
taxonName="Pan_troglodytes"
# path to FASTA format reference genome:
GENOME="$OUTPUT/ReferenceGenome/GCF_002880755.1_Clint_PTRv2_genomic.fna"
# path to GFF format reference annotation file:
ANNOTATION="$OUTPUT/ReferenceGenome/GCF_002880755.1_Clint_PTRv2_genomic.gff"
# select output mode (either counts of different annotation types, or length proportion of each annotations type)
## (`c`) count the number of each feature per locus, for ex. 1 CDS, 2 introns, etc.
## (`l`) compute proportion of length of each feature type per locus, for ex. 0.2 CDS, 0.8 introns
outputMode="l"

mkdir -p $OUTPUT
cd $OUTPUT

#Andromeda (URI's cluster) specific
module purge
module load Biopython/1.78-foss-2020b
#
python ${SCRIPTS}/annotation_getTaxContigs.py ${taxonName} ${LOCI}

#Andromeda (URI's cluster) specific
module purge
module load BLAST+
#

makeblastdb -in ${GENOME} -dbtype nucl

blastn -query ${taxonName}.fasta -db ${GENOME} -outfmt 6 -num_threads ${TASKS} > blast_results.blast

python3 ${SCRIPTS}/annotation_blast_parser.py blast_results.blast > full_table.bed

sort -k1,1 -k2,2n full_table.bed > full_table_sorted.bed

#Andromeda (URI's cluster) specific
module purge
module load BEDTools/2.27.1-foss-2018b
#

bedtools intersect -a full_table_sorted.bed -b ${ANNOTATION} -wa -wb > full_table_annotated.bed

python3 ${SCRIPTS}/annotation_bed2table.py full_table_annotated.bed ${outputMode} > annotations.csv

date
_______________________________
sbatch -q schwartzlab 03.01_Annotation.sh
Submitted batch job 363297
Job ID: 363297
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 36
CPU Utilized: 00:07:37
CPU Efficiency: 0.32% of 1-15:40:48 core-walltime
Job Wall-clock time: 01:06:08
Memory Utilized: 1.18 GB
Memory Efficiency: 1.64% of 72.00 GB

2025.03.26

cd /data/schwartzlab/Biancani/PlacentalPolytomy/02_IQtree

02.02_iqtree_array_concat.sh
_______________________________
#!/bin/bash
#SBATCH --job-name="IQcat"
#SBATCH --time=24:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node
#SBATCH -c 10
#SBATCH --mem-per-cpu=6G
#SBATCH --array=[1-28]%28 ## UPDATE based on output from 02.00_iqtree_prep.sh
#SBATCH --mail-user="biancani@uri.edu"
#SBATCH --mail-type=ALL

## UPDATE PATHS as necessary:

# path to project directory:
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# location of iqtree scripts:
scripts_dir=$PROJECT/02_IQtree
# path to FILTERED SISRS loci (aligned contigs):
INPUT=$PROJECT/output/01_SISRS_loci_filtered
# path to file containing alternative hypotheses trees:
trees_to_eval=$scripts_dir/hypothesis_trees/Polytomy_Placental_Hypotheses.tree
# path to IQ-TREE executale:
IQTREE="/data/schwartzlab/Biancani/Software/iqtree-2.1.2-Linux/bin/iqtree2"
# path to AMAS executable:
AMAS="/data/schwartzlab/Biancani/Software/AMAS/amas/AMAS.py"

# path to output folder for IQ-TREE
OUTPUT=$PROJECT/output/02_iqtree_assessment
# (must be location of array_list.txt and aligned_loci_list_* created by iqtree prep script)
ARRAY=$OUTPUT/02.00_array_prep_files
# paths to output directory created by 02.00_iqtree_prep.sh:
CAT_OUT=$OUTPUT/02.02_concat_trees

cd ${CAT_OUT}
date

module purge
module load Python/3.7.4-GCCcore-8.3.0

fileline=$(sed -n ${SLURM_ARRAY_TASK_ID}p $ARRAY/array_list.txt)

# generates list of paths to infiles
infiles=$(cat ${ARRAY}/${fileline} | while read line; do echo ${INPUT}/${line}; done | paste -sd" ")

#amas concatenated
python3 ${AMAS} concat -f fasta -d dna --out-format fasta --part-format raxml -i $infiles -t concatenated_${SLURM_ARRAY_TASK_ID}.fasta -p partitions_${SLURM_ARRAY_TASK_ID}.txt

module purge
module load R/4.0.3-foss-2020b

Rscript ${scripts_dir}/trimTrees.R concatenated_${SLURM_ARRAY_TASK_ID}.fasta ${trees_to_eval} ./trees_${SLURM_ARRAY_TASK_ID}.tre

#${IQTREE} -nt 10 -s concatenated_${SLURM_ARRAY_TASK_ID}.fasta -spp partitions_${SLURM_ARRAY_TASK_ID}.txt -z ./trees_${SLURM_ARRAY_TASK_ID}.tre -pre calcLnL_${SLURM_ARRAY_TASK_ID} -n 0 -m GTR+G -wsl
#${IQTREE} -nt 10 -s concatenated_${SLURM_ARRAY_TASK_ID}.fasta -spp partitions_${SLURM_ARRAY_TASK_ID}.txt -pre inference_${SLURM_ARRAY_TASK_ID} -m GTR+G -bb 1000 -alrt 1000 -wsr

for i in $(seq 3) #iterate through 3 hypothesis trees
do
  sed -n ${i}p ./trees_${SLURM_ARRAY_TASK_ID}.tre > ./tree${i}_${SLURM_ARRAY_TASK_ID}.tre
  ${IQTREE} -nt 10 -s concatenated_${SLURM_ARRAY_TASK_ID}.fasta -spp partitions_${SLURM_ARRAY_TASK_ID}.txt -pre calcLnL${i}_${SLURM_ARRAY_TASK_ID} -g ./tree${i}_${SLURM_ARRAY_TASK_ID}.tre -m GTR+G -redo -wsl
done

${IQTREE} -nt 10 -s concatenated_${SLURM_ARRAY_TASK_ID}.fasta -spp partitions_${SLURM_ARRAY_TASK_ID}.txt -pre inference_${SLURM_ARRAY_TASK_ID} -m GTR+G -bb 1000 -alrt 1000 -redo -wsr

date
_______________________________
sbatch -q schwartzlab 02.02_iqtree_array_concat.sh
Submitted batch job 363591
Job ID: 363591
Array Job ID: 363591_28
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 10
CPU Utilized: 19:04:25
CPU Efficiency: 95.25% of 20:01:30 core-walltime
Job Wall-clock time: 02:00:09
Memory Utilized: 2.35 GB
Memory Efficiency: 3.92% of 60.00 GB


2025.04.11

cd /data/schwartzlab/Biancani/PlacentalPolytomy/02_IQtree

02.03_iqtree_array_gtree.sh
_______________________________
#!/bin/bash
#SBATCH --job-name="IQarr"
#SBATCH --time=48:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node
#SBATCH -c 1
#SBATCH --mem-per-cpu=6G
#SBATCH --array=[1-28]%28 ## UPDATE based on output from 02.00_iqtree_prep.sh
#SBATCH --mail-user="biancani@uri.edu"
#SBATCH --mail-type=ALL

## UPDATE PATHS as necessary:

# path to project directory:
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# location of iqtree scripts:
scripts_dir=$PROJECT/02_IQtree
# path to FILTERED SISRS loci (aligned contigs):
INPUT=$PROJECT/output/01_SISRS_loci_filtered
# path to IQ-TREE executale:
IQTREE="/data/schwartzlab/Biancani/Software/iqtree-2.1.2-Linux/bin/iqtree2"

# path to output folder for IQ-TREE
OUTPUT=$PROJECT/output/02_iqtree_assessment
# path to array files (array_list.txt and aligned_loci_list_* created by 02.00_iqtree_prep.sh)
ARRAY=$OUTPUT/02.00_array_prep_files
# paths to individual gene tree output directory created by 02.00_iqtree_prep.sh:
GT_OUT=$OUTPUT/02.03_gene_trees/individual_gtrees

cd ${GT_OUT}
date

#generate list of filenames for aligned loci:
fileline=$(sed -n ${SLURM_ARRAY_TASK_ID}p $ARRAY/array_list.txt)

cat ${ARRAY}/${fileline} | while read line
do
	echo $line
	${IQTREE} -nt 1 -s ${INPUT}/${line} -pre inference_${line} -alrt 1000 -m GTR+G
	# rm unnessary output files
	# (while preventing the return of an error exit status if file does not exist)
	for file in inference_${line}.ckp.gz inference_${line}.iqtree inference_${line}.log inference_${line}.bionj inference_${line}.mldist inference_${line}.uniqueseq.phy
	do
	  if [ -f $file ]; then # test to see if file exists
	    rm $file
	  else
	    echo "rm: cannot remove $file: No such file or directory"
	  fi
	done
done
_______________________________
sbatch -q schwartzlab 02.03_iqtree_array_gtree.sh
Submitted batch job 364062
Job ID: 364062
Array Job ID: 364062_28
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 02:46:48
CPU Efficiency: 86.30% of 03:13:17 core-walltime
Job Wall-clock time: 03:13:17
Memory Utilized: 9.66 MB
Memory Efficiency: 0.16% of 6.00 GB

2025.04.12

cd /data/schwartzlab/Biancani/PlacentalPolytomy/02_IQtree

02.03b_iqtree_collect_gtrees.sh
_______________________________
#!/bin/bash
#SBATCH --job-name="IQout"
#SBATCH --time=24:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node
#SBATCH -c 1
#SBATCH --mem-per-cpu=8G
#SBATCH --mail-user="biancani@uri.edu"
#SBATCH --mail-type=ALL

## UPDATE PATHS as necessary

# path to project directory:
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# path to output folder for IQ-TREE
OUTPUT=$PROJECT/output/02_iqtree_assessment
# path to array files (array_list.txt and aligned_loci_list_* created by 02.00_iqtree_prep.sh)
ARRAY=$OUTPUT/02.00_array_prep_files
# paths to individual gene tree output directory created by 02.00_iqtree_prep.sh:
GT_OUT=$OUTPUT/02.03_gene_trees/individual_gtrees

cd $GT_OUT
date
# collect all individual loci (gene tree) names
> ../gtrees.txt; cat $ARRAY/array_list.txt | while read line1; do cat $ARRAY/${line1} >> ../gtrees.txt; done
# combines all individual gene trees into a single file
> ../gtrees.tre; cat ../gtrees.txt | while read line; do cat $GT_OUT/inference_${line}.treefile >> ../gtrees.tre; done
date
_______________________________
sbatch -q schwartzlab 02.03b_iqtree_collect_gtrees.sh
Submitted batch job 364127
Job ID: 364127
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 00:03:11
CPU Efficiency: 2.99% of 01:46:22 core-walltime
Job Wall-clock time: 01:46:22
Memory Utilized: 764.00 KB
Memory Efficiency: 0.01% of 8.00 GB


cd /data/schwartzlab/Biancani/PlacentalPolytomy/02_IQtree

02.01b_iqture_collect_output.sh
_______________________________
#!/bin/bash
#SBATCH --job-name="IQout"
#SBATCH --time=24:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node
#SBATCH -c 1
#SBATCH --mem-per-cpu=8G
#SBATCH --mail-user="biancani@uri.edu" #CHANGE THIS to your user email address
#SBATCH --mail-type=ALL

## UPDATE PATHS as necessary

# path to project directory:
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# path to output folder for IQ-TREE
OUTPUT=$PROJECT/output/02_iqtree_assessment
# (must be location of array_list.txt and aligned_loci_list_* created by iqtree prep script)
ARRAY=$OUTPUT/02.00_array_prep_files
# paths to output directories created by 02.00_iqtree_prep.sh:
CombineOUT=$OUTPUT/02.01_compare_hypotheses
# path to likelihood outputs (generated by 02.01_iqtree_array.sh):
LnL=$OUTPUT/02.01_compare_hypotheses/likelihood
# path to sCF outputs (generated by 02.01_iqtree_array.sh):
sCF=$OUTPUT/02.01_compare_hypotheses/scf

output_prefix="combined"

date
cd $CombineOUT

# concatenate likelihood output files
cat ${LnL}/LnLs_*.csv > ${output_prefix}_dLnLs.csv

# initialize empty combined sCF file
> ${output_prefix}_scf.csv
# iterate trhough list of locus names:
cat ${ARRAY}/array_list.txt | while read array_list_line
do
  # read scf output for each locus
  cat ${ARRAY}/${array_list_line} | while read aligned_loci_list_line
  do
    # construct the full path to the corresponding sCF output file for the locus
    fscf="${sCF}/scf_${aligned_loci_list_line}"
    # extract the sCF values (second column) for each hypothesis (lines 2, 3, and 4)
    # and write full file path and 3 sCF values as a new line in the combined CSV
    echo $fscf","$(sed -n 2p $fscf | cut -f2 -d,)","$(sed -n 3p $fscf | cut -f2 -d,)","$(sed -n 4p $fscf | cut -f2 -d,) >> ${output_prefix}_scf.csv
  done
done
# remove path and prefix from the first field leaving only the locus name: 
sed -i -e "s+${sCF}/scf_++g" ${output_prefix}_scf.csv
date
_______________________________
sbatch -q schwartzlab 02.01b_iqtree_collect_output.sh
Submitted batch job 364131
Job ID: 364131
Cluster: andromeda
User/Group: biancani/schwartzlab
State: COMPLETED (exit code 0)
Cores: 1
CPU Utilized: 00:20:45
CPU Efficiency: 16.51% of 02:05:39 core-walltime
Job Wall-clock time: 02:05:39
Memory Utilized: 1004.00 KB
Memory Efficiency: 0.01% of 8.00 GB

2025.13.2025

cd /data/schwartzlab/Biancani/PlacentalPolytomy/02_IQtree

02.02b_iqtree_collect_phyloinference_LnL.sh
_______________________________
#!/bin/bash
#SBATCH --job-name="iqout"
#SBATCH --time=24:00:00  # walltime limit (HH:MM:SS)
#SBATCH --nodes=1   # number of nodes
#SBATCH --ntasks-per-node=1   # processor core(s) per node
#SBATCH -c 1
#SBATCH --mem-per-cpu=8G
#SBATCH --mail-user="biancani@uri.edu" #CHANGE THIS to your user email address
#SBATCH --mail-type=ALL

## UPDATE PATHS as necessary:

# path to project directory:
arrayLen=28 #specify length of the array job for 02.02_iqtree_array_concat.sh
PROJECT=/data/schwartzlab/Biancani/PlacentalPolytomy
# path to output folder for IQ-TREE
OUTPUT=$PROJECT/output/02_iqtree_assessment
# paths to output directory for 02.02_iqturee_array_concat.sh
# (location of `partitions_` files)
CAT_OUT=$OUTPUT/02.02_concat_trees

cd $CAT_OUT
date

# create directory for array analysis files:
ARRAY=$CAT_OUT/array_output
mkdir -p $ARRAY
mv tree* inference_* partitions_* calcLnL* concatenated_* $ARRAY

> combined_iqtree_dLnLs_concat.csv
for f in $(seq 1 ${arrayLen})
do
        cat ${ARRAY}/partitions_${f}.txt | while read l
        do
                locname=$(echo ${l} | cut -f2 -d" " | cut -f2- -d_)
                range1=$(echo ${l} | cut -f4 -d" ")
                tree1=$(sed -n 2p ${CAT_OUT}/calcLnL_${f}.sitelh | awk -v a="${range1}" 'BEGIN {split(a, A, /-/)} {x=0;for(i=A[1]+1;i<=A[2]+1;i++)x=x+$i;print x}')
                tree2=$(sed -n 3p ${CAT_OUT}/calcLnL_${f}.sitelh | awk -v a="${range1}" 'BEGIN {split(a, A, /-/)} {x=0;for(i=A[1]+1;i<=A[2]+1;i++)x=x+$i;print x}')
                tree3=$(sed -n 4p ${CAT_OUT}/calcLnL_${f}.sitelh | awk -v a="${range1}" 'BEGIN {split(a, A, /-/)} {x=0;for(i=A[1]+1;i<=A[2]+1;i++)x=x+$i;print x}')
                echo ${locname},${tree1},${tree2},${tree3} >> ../combined_iqtree_dLnLs_concat.csv
        done
done
date
_______________________________
sbatch -q schwartzlab 02.02b_iqtree_collect_phyloinference_LnL.sh


To do:
re-run 04.09b_run_astral_allLoci.sh - running
(check for output files first)

